#!/bin/sh 

Version=0.01

# help guide
help_ani()
{
  printf '
  GitUpdate (version: %s) 
  Bash script that updates My_GitHub on the following machines:
  
  ' ${Version}

  printf '%s|' "${machine_list[@]}"; echo

  printf ' 
  Usage:  GitUpdate 

  Optional arguments: 
  
  -h       : display help message

' 
exit 1
}


#############  General Default Values ############# 

machine_list=("gordon" "conrad" "shepard" "armstrong" "haise" "kilrain" "excalibur" "spirit" "garnet" "topaz" "thunder")


while (($#)); do
    case "$1" in
        -clean) Clean=1;;
        *)  help_ani ;;
    esac
    shift
done



############# Remote Commands ############# 


cmdfile=tmp_file
cat > ~/.${cmdfile} << _EOF_
source ~/.bashrc
source ~/.profile
cd ~/My_GitHub/ 
git pull 
rm ~/Public/bin/qlammps 
rm ~/Public/bin/loop_diffraction 
cp ~/My_GitHub/Bash_Scripts/loop_diffraction ~/Public/bin/loop_diffraction
cp ~/My_GitHub/Bash_Scripts/qlammps ~/Public/bin/qlammps ; chmod 755 ~/Public/bin/*

_EOF_

chmod 777 ~/.${cmdfile}





remote_update() 
{
machine=$1
scp ~/.${cmdfile} ${machine}:~/.${cmdfile} >& ~/.trash_file  
ssh ${machine} "~/.${cmdfile} ; rm ~/.${cmdfile}" >& ~/.tmp_gitupdate_${machine}

# Sometimes machine isn't found -> Try again!
error1=`cat ~/.tmp_gitupdate_${machine} | grep "Could not resolve hostname" | wc -l`
if [ $error1 != "0" ]; then 
  scp ~/.${cmdfile} ${machine}:~/.${cmdfile} >& ~/.trash_file  
  ssh ${machine} "~/.${cmdfile} ; rm ~/.${cmdfile}" >& ~/.tmp_gitupdate_${machine}
  error1=`cat ~/.tmp_gitupdate2_${machine} | grep "Could not resolve hostname" | wc -l` 
  if [ $error1 != "0" ]; then  
    echo "Could not resolve hostname on ${machine}"
    exit 1
  fi
fi 
echo "${machine} status: `tail -n 1 ~/.tmp_gitupdate_${machine}`"
rm ~/.tmp_gitupdate_${machine}
}


############# Update Now ############# 

T0="$(date +%s)"
for machine in ${machine_list[*]}; do
    remote_update $machine &
done
wait
T1="$(($(date +%s)-T0))"
printf "Update Time : %02d:%02d:%02d:%02d\n" "$(($T1/86400))" "$(($T1/3600%24))" "$(($T1/60%60))" "$(($T1%60))"""

rm ~/.trash_file
rm ~/.${cmdfile}

