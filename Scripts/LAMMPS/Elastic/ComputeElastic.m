clc; clear; close all

% A script that reads in stress/strain data generated from
% Coleman_Elastic.in and computes elastic constants using linear
% regressions with and without a y-intercept term.  This is done for the
% loading and unloading portion of the data seperately.  Data is written to
% a file defined by the 'writefile' variable.  Plots are generated for the
% loading (Fig 1) and unloading data (Fig 2).

prefix='b4c_0_001_25_mod'

writefile=[prefix '_Elastic_Data.txt'];

% Below insert the path to the *.m file generated by Coleman_Elastic.in
% which contains Data structures including the stress-strain information.

eval(prefix)


clc
fig1=figure('position',[3760 282 2433 1181],'color','w');
fig2=figure('position',[3662 56 2433 1181],'color','w');
fig3=figure('position',[3760 282 2433 1181],'color','w');
fig4=figure('position',[3662 56 2433 1181],'color','w');

cmap=colormap(lines(6));
for j=1:6
  for i=1:6
    
    if i==1
      Label='P_x_x';
    elseif i==2 
      Label='P_y_y';
    elseif i==3 
      Label='P_z_z';
    elseif i==4 
      Label='P_y_z';
    elseif i==5 
      Label='P_x_z';
    elseif i==6 
      Label='P_x_y';
    end
    
    StrainL=Load(j).Data(:,2);
    StressL=Load(j).Data(:,2+i);
    StrainU=UnLoad(j).Data(:,2);
    StressU=UnLoad(j).Data(:,2+i);

    figure(fig1)
    subplot(2,3,j)
    x=StrainL; y=StressL;
    plot(x,y,'o','color',cmap(i,:), 'DisplayName', Label); hold on
    title(['C' num2str(j)],'fontsize',16)
    xlabel('Strain','fontsize',14)
    ylabel('Pressure (GPa)','fontsize',14)

    n1=length(x);
    a1=[ones(n1,1),x];         % Design matrix with intercept (y = b+mx)
    k1=inv(a1'*a1)*a1';        % Normal equations for solving linear regression
    b1=k1*y;                   % Least squares solution
    r1=y-a1*b1;                % Vector of residuals 
    r1_var=norm(r1)^2/(n1-2);  % Varience of residuals
    r1_std=r1_var^.5;          % Standard deviation of residuals 
    b1_var=k1*r1_var*k1';      % Variance/Covarence of soluiton
    b1_std=b1_var^.5;          % Distribution of solution

    n2=length(x);
    a2=[x];                    % Design matrix with intercept (y = mx)
    k2=inv(a2'*a2)*a2';        % Normal equations for solving linear regression
    b2=k2*y;                   % Least squares solution
    r2=y-a2*b2;                % Vector of residuals 
    r2_var=norm(r2)^2/(n2-2);  % Varience of residuals
    r2_std=r2_var^.5;          % Standard deviation of residuals 
    b2_var=k2*r2_var*k2';      % Variance/Covarence of soluiton
    b2_std=b2_var^.5;          % Distribution of solution
    plot(x,a1*b1,'--','color',cmap(i,:), 'HandleVisibility','off')
    plot(x,a2*b2,'.-.','color',cmap(i,:), 'HandleVisibility','off')

    C(j,i).b1L=b1;
    C(j,i).b1L_std=b1_std;
    C(j,i).b2L=b2;
    C(j,i).b2L_std=b2_std;

    figure(fig2)
    subplot(2,3,j)
    x=StrainU; y=StressU;
    plot(x,y,'o','color',cmap(i,:), 'DisplayName', Label); hold on
    title(['C' num2str(j)],'fontsize',16)
    xlabel('Strain','fontsize',14)
    ylabel('Pressure (GPa)','fontsize',14)

    n1=length(x);
    a1=[ones(n1,1),x];         % Design matrix with intercept (y = b+mx)
    k1=inv(a1'*a1)*a1';        % Normal equations for solving linear regression
    b1=k1*y;                   % Least squares solution
    r1=y-a1*b1;                % Vector of residuals 
    r1_var=norm(r1)^2/(n1-2);  % Varience of residuals
    r1_std=r1_var^.5;          % Standard deviation of residuals 
    b1_var=k1*r1_var*k1';      % Variance/Covarence of soluiton
    b1_std=b1_var^.5;          % Distribution of solution

    n2=length(x);
    a2=[x];                    % Design matrix with intercept (y = mx)
    k2=inv(a2'*a2)*a2';        % Normal equations for solving linear regression
    b2=k2*y;                   % Least squares solution
    r2=y-a2*b2;                % Vector of residuals 
    r2_var=norm(r2)^2/(n2-2);  % Varience of residuals
    r2_std=r2_var^.5;          % Standard deviation of residuals 
    b2_var=k2*r2_var*k2';      % Variance/Covarence of soluiton
    b2_std=b2_var^.5;          % Distribution of solution
    plot(x,a1*b1,'--','color',cmap(i,:), 'HandleVisibility','off')
    plot(x,a2*b2,'.-.','color',cmap(i,:), 'HandleVisibility','off')


    C(j,i).b1U=b1;
    C(j,i).b1U_std=b1_std;
    C(j,i).b2U=b2;
    C(j,i).b2U_std=b2_std;

%%%%

    figure(fig3)
    subplot(2,3,j)
    x=StrainL; y=StressL;
    plot(x,y,'o','color',cmap(i,:), 'DisplayName', Label); hold on
    title(['C' num2str(j)],'fontsize',16)
    xlabel('Strain','fontsize',14)
    ylabel('Pressure (GPa)','fontsize',14)

    n1=length(x);
    a1=[ones(n1,1),x];         % Design matrix with intercept (y = b+mx)
    k1=inv(a1'*a1)*a1';        % Normal equations for solving linear regression
    b1=k1*y;                   % Least squares solution
    r1=y-a1*b1;                % Vector of residuals 
    r1_var=norm(r1)^2/(n1-2);  % Varience of residuals
    r1_std=r1_var^.5;          % Standard deviation of residuals 
    b1_var=k1*r1_var*k1';      % Variance/Covarence of soluiton
    b1_std=b1_var^.5;          % Distribution of solution
    
    plot(x,a1*b1,'-','color',cmap(i,:), 'HandleVisibility','off')
    

    figure(fig4)
    subplot(2,3,j)
    x=StrainU; y=StressU;
    plot(x,y,'o','color',cmap(i,:), 'DisplayName', Label); hold on
    title(['C' num2str(j)],'fontsize',16)
    xlabel('Strain','fontsize',14)
    ylabel('Pressure (GPa)','fontsize',14)

    n1=length(x);
    a1=[ones(n1,1),x];         % Design matrix with intercept (y = b+mx)
    k1=inv(a1'*a1)*a1';        % Normal equations for solving linear regression
    b1=k1*y;                   % Least squares solution
    r1=y-a1*b1;                % Vector of residuals 
    r1_var=norm(r1)^2/(n1-2);  % Varience of residuals
    r1_std=r1_var^.5;          % Standard deviation of residuals 
    b1_var=k1*r1_var*k1';      % Variance/Covarence of soluiton
    b1_std=b1_var^.5;          % Distribution of solution

    plot(x,a1*b1,'-','color',cmap(i,:), 'HandleVisibility','off')


    
    
  end
  figure(fig1)
  h=legend('show');
  set(h,'box','off','orientation','horizontal','location','north','fontsize',14);
  figure(fig2)
  h=legend('show');
  set(h,'box','off','orientation','horizontal','location','north','fontsize',14);
  figure(fig3)
  h=legend('show');
  set(h,'box','off','orientation','horizontal','location','north','fontsize',14);
  figure(fig4)
  h=legend('show');
  set(h,'box','off','orientation','horizontal','location','north','fontsize',14);


end

% save plots

figure(fig3)
expfig=['export_fig ' prefix '_load_data' ' -eps -pdf -png'];
eval(expfig)

figure(fig4)
expfig=['export_fig ' prefix '_unload_data' ' -eps -pdf -png'];
eval(expfig)

% Writing all elastic contant data out to file:

fid=fopen(writefile,'w');
fprintf(fid,'Elastic Constants WITHOUT Assuming Y intercept of 0\n');
fprintf(fid,'-- using loading data \n');
for j=1:6
  for i=1:6
   fprintf('C%d%d = %f +/- %f\n',j, i, -C(j,i).b1L(2), C(j,i).b1L_std(2,2));
   fprintf(fid,'C%d%d = %f +/- %f\n',j, i, -C(j,i).b1L(2), C(j,i).b1L_std(2,2));
  end
end

fprintf(fid,'Elastic Constants WITHOUT Assuming Y intercept of 0\n');
fprintf(fid,'-- using unloading data \n');
for j=1:6
  for i=1:6
   fprintf('C%d%d = %f +/- %f\n',j, i, -C(j,i).b1U(2), C(j,i).b1U_std(2,2));
   fprintf(fid,'C%d%d = %f +/- %f\n',j, i, -C(j,i).b1U(2), C(j,i).b1U_std(2,2));
  end
end

fprintf(fid,'Elastic Constants Assuming Y intercept of 0\n');
fprintf(fid,'-- using loading data \n');
for j=1:6
  for i=1:6
   fprintf('C%d%d = %f +/- %f\n',j, i, -C(j,i).b2L(1), C(j,i).b2L_std(1,1));
   fprintf(fid,'C%d%d = %f +/- %f\n',j, i, -C(j,i).b2L(1), C(j,i).b2L_std(1,1));
  end
end

fprintf(fid,'Elastic Constants Assuming Y intercept of 0\n');
fprintf(fid,'-- using unloading data \n');
for j=1:6
  for i=1:6
   fprintf('C%d%d = %f +/- %f\n',j, i, -C(j,i).b2U(1), C(j,i).b2U_std(1,1));
   fprintf(fid,'C%d%d = %f +/- %f\n',j, i, -C(j,i).b2U(1), C(j,i).b2U_std(1,1));
  end
end

fclose(fid)